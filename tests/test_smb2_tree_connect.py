#!/usr/bin/env python
# coding: utf-8

from smb2.header import Direction
from smb2.tree_connect import TreeConnect

tree_connect_req_buf_1 = bytes([
    0x00, 0x00, 0x00, 0x68,

    0xfe, 0x53, 0x4d, 0x42, 0x40, 0x00, 0x01, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x01, 0x00,
    0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x29, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00,
    0x28, 0x64, 0xfb, 0xed, 0x6c, 0x35, 0x69, 0x34,
    0x86, 0x1b, 0x55, 0x07, 0x74, 0x88, 0x38, 0xf4,
    
    0x09, 0x00, 0x00, 0x00, 0x48, 0x00, 0x1e, 0x00,
    0x5c, 0x00, 0x5c, 0x00, 0x77, 0x00, 0x69, 0x00,
    0x6e, 0x00, 0x31, 0x00, 0x36, 0x00, 0x2d, 0x00,
    0x31, 0x00, 0x5c, 0x00, 0x53, 0x00, 0x68, 0x00,
    0x61, 0x00, 0x72, 0x00, 0x65, 0x00, 0x00, 0x00
])

tree_connect_rep_buf_1 = bytes([
    0x00, 0x00, 0x00, 0x50,

    0xfe, 0x53, 0x4d, 0x42, 0x40, 0x00, 0x01, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x01, 0x00,
    0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xff, 0xfe, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
    0x29, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00,
    0x86, 0x32, 0xbb, 0x45, 0xfd, 0xc8, 0x00, 0x5d,
    0x30, 0x33, 0x59, 0x12, 0x3b, 0x27, 0x67, 0xd6,
    
    0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xff, 0x01, 0x1f, 0x00
])


def pr(buf):
    for i in buf:
        print("%02x " % i, end='')
    print()

def main():
    print('Decode and re-encode a TreeConnect Request #1')
    tc = TreeConnect()
    cmd = tc.decode(Direction.REQUEST, tree_connect_req_buf_1[4 + 64:])
    buf = tc.encode(Direction.REQUEST, cmd)

    if tree_connect_req_buf_1[4 + 64:] != buf:
        print('Re-encoded content mismatch')
        print('Original:')
        pr(tree_connect_req_buf_1[4 + 64:])
        print('Encoded:')
        pr(buf)
        exit(1)

    print('Decode and re-encode a TreeConnect Reply #1')
    tc = TreeConnect()
    cmd = tc.decode(Direction.REPLY, tree_connect_rep_buf_1[4 + 64:])
    buf = tc.encode(Direction.REPLY, cmd)

    if tree_connect_rep_buf_1[4 + 64:] != buf:
        print('Re-encoded content mismatch')
        print('Original:')
        pr(tree_connect_rep_buf_1[4 + 64:])
        print('Encoded:')
        pr(buf)
        exit(1)


if __name__ == "__main__":
    main()
