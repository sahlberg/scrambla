#!/usr/bin/env python
# coding: utf-8

import array
import struct

from smb2.error_response import ErrorResponse

error_response_buf_1 = bytearray([
    0x00, 0x00, 0x00, 0x49,

    0xfe, 0x53, 0x4d, 0x42, 0x40, 0x00, 0x00, 0x00,
    0x0d, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x01, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

    0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x04
])

def pr(buf):
    for i in buf:
        print("%02x " % i, end='')
    print()

def main():
    print('Decode and re-encode an Error Response #1')
    a = ErrorResponse()
    hdr = a.decode(error_response_buf_1[4 + 64:])
    buf = a.encode(hdr)

    if error_response_buf_1[4 + 64:] != buf:
        print('Re-encoded buffer content mismatch')
        print('Original')
        pr(error_response_buf_1[4 + 64:])
        print('Encoded ')
        pr(buf)
        exit(1)

        
if __name__ == "__main__":
    main()
