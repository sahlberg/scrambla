#!/usr/bin/env python
# coding: utf-8

from smb2.header import Direction
from smb2.session_setup import SessionSetup

session_setup_req_buf_1 = bytes([
    0x00, 0x00, 0x00, 0x78,
    
    0xfe, 0x53, 0x4d, 0x42, 0x40, 0x00, 0x01, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0xff, 0x03,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    
    0x19, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x58, 0x00, 0x20, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x4e, 0x54, 0x4c, 0x4d, 0x53, 0x53, 0x50, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x27, 0x02, 0x08, 0xa0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00     
])

session_setup_req_buf_2 = bytes([
    0x00, 0x00, 0x01, 0x48,

    0xfe, 0x53, 0x4d, 0x42, 0x40, 0x00, 0x01, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0xff, 0x03,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x29, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    
    0x19, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x58, 0x00, 0xf0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x4e, 0x54, 0x4c, 0x4d, 0x53, 0x53, 0x50, 0x00,
    0x03, 0x00, 0x00, 0x00, 0x18, 0x00, 0x18, 0x00,
    0x50, 0x00, 0x00, 0x00, 0x88, 0x00, 0x88, 0x00,
    0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x00, 0x00, 0x00, 0x10, 0x00, 0x10, 0x00,
    0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x27, 0x02, 0x08, 0xa0,
    0x73, 0x00, 0x61, 0x00, 0x68, 0x00, 0x6c, 0x00,
    0x62, 0x00, 0x65, 0x00, 0x72, 0x00, 0x67, 0x00,
    0xaf, 0xc9, 0x49, 0x10, 0x08, 0xda, 0xa0, 0x44,
    0x97, 0x67, 0x16, 0xe6, 0xa3, 0xc7, 0x6d, 0xf7,
    0xa9, 0xa9, 0x57, 0x70, 0x4c, 0xd6, 0x07, 0xc6,
    0x3d, 0x4d, 0x08, 0x5b, 0x2e, 0x40, 0x2f, 0xf9,
    0xdb, 0x45, 0x37, 0x14, 0xbe, 0xa7, 0x96, 0x64,
    0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x20, 0x4c, 0xb6, 0x23, 0xcd, 0xd6, 0x01,
    0xa9, 0xa9, 0x57, 0x70, 0x4c, 0xd6, 0x07, 0xc6,
    0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x0e, 0x00,
    0x57, 0x00, 0x49, 0x00, 0x4e, 0x00, 0x31, 0x00,
    0x36, 0x00, 0x2d, 0x00, 0x31, 0x00, 0x01, 0x00,
    0x0e, 0x00, 0x57, 0x00, 0x49, 0x00, 0x4e, 0x00,
    0x31, 0x00, 0x36, 0x00, 0x2d, 0x00, 0x31, 0x00,
    0x04, 0x00, 0x0e, 0x00, 0x77, 0x00, 0x69, 0x00,
    0x6e, 0x00, 0x31, 0x00, 0x36, 0x00, 0x2d, 0x00,
    0x31, 0x00, 0x03, 0x00, 0x0e, 0x00, 0x77, 0x00,
    0x69, 0x00, 0x6e, 0x00, 0x31, 0x00, 0x36, 0x00,
    0x2d, 0x00, 0x31, 0x00, 0x07, 0x00, 0x08, 0x00,
    0x0c, 0xb2, 0x8c, 0xb6, 0x23, 0xcd, 0xd6, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00     
])

session_setup_rep_buf_1 = bytes([
    0x00, 0x00, 0x00, 0xe6,

    0xfe, 0x53, 0x4d, 0x42, 0x40, 0x00, 0x01, 0x00,
    0x16, 0x00, 0x00, 0xc0, 0x01, 0x00, 0x01, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x29, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    
    0x09, 0x00, 0x00, 0x00, 0x48, 0x00, 0x9e, 0x00,
    0x4e, 0x54, 0x4c, 0x4d, 0x53, 0x53, 0x50, 0x00,
    0x02, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x0e, 0x00,
    0x38, 0x00, 0x00, 0x00, 0x25, 0x02, 0x8a, 0xa2,
    0xeb, 0x8b, 0x7a, 0x22, 0x12, 0x00, 0xdf, 0xcf,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x58, 0x00, 0x58, 0x00, 0x46, 0x00, 0x00, 0x00,
    0x0a, 0x00, 0x39, 0x38, 0x00, 0x00, 0x00, 0x0f,
    0x57, 0x00, 0x49, 0x00, 0x4e, 0x00, 0x31, 0x00,
    0x36, 0x00, 0x2d, 0x00, 0x31, 0x00, 0x02, 0x00,
    0x0e, 0x00, 0x57, 0x00, 0x49, 0x00, 0x4e, 0x00,
    0x31, 0x00, 0x36, 0x00, 0x2d, 0x00, 0x31, 0x00,
    0x01, 0x00, 0x0e, 0x00, 0x57, 0x00, 0x49, 0x00,
    0x4e, 0x00, 0x31, 0x00, 0x36, 0x00, 0x2d, 0x00,
    0x31, 0x00, 0x04, 0x00, 0x0e, 0x00, 0x77, 0x00,
    0x69, 0x00, 0x6e, 0x00, 0x31, 0x00, 0x36, 0x00,
    0x2d, 0x00, 0x31, 0x00, 0x03, 0x00, 0x0e, 0x00,
    0x77, 0x00, 0x69, 0x00, 0x6e, 0x00, 0x31, 0x00,
    0x36, 0x00, 0x2d, 0x00, 0x31, 0x00, 0x07, 0x00,
    0x08, 0x00, 0x0c, 0xb2, 0x8c, 0xb6, 0x23, 0xcd,
    0xd6, 0x01, 0x00, 0x00, 0x00, 0x00
])

session_setup_rep_buf_2 = bytes([
    0x00, 0x00, 0x00, 0x48,

    0xfe, 0x53, 0x4d, 0x42, 0x40, 0x00, 0x01, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0xff, 0x03,
    0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x29, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00,
    0x62, 0x32, 0xd3, 0x93, 0x76, 0xbf, 0x99, 0x4f,
    0x9f, 0x00, 0xc8, 0xa1, 0xde, 0x23, 0x1d, 0x4f,

    0x09, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00
])


def pr(buf):
    for i in buf:
        print("%02x " % i, end='')
    print()

def main():
    print('Decode and re-encode a SessionSetup Request #1')
    ss = SessionSetup()
    cmd = ss.decode(Direction.REQUEST, session_setup_req_buf_1[4 + 64:])
    buf = ss.encode(Direction.REQUEST, cmd)

    if session_setup_req_buf_1[4 + 64:] != buf:
        print('Re-encoded content mismatch')
        print('Original:')
        pr(session_setup_req_buf_1[4 + 64:])
        print('Encoded:')
        pr(buf)
        exit(1)

    print('Decode and re-encode a SessionSetup Request #2')
    ss = SessionSetup()
    cmd = ss.decode(Direction.REQUEST, session_setup_req_buf_2[4 + 64:])
    buf = ss.encode(Direction.REQUEST, cmd)

    if session_setup_req_buf_2[4 + 64:] != buf:
        print('Re-encoded content mismatch')
        print('Original:')
        pr(session_setup_req_buf_2[4 + 64:])
        print('Encoded:')
        pr(buf)
        exit(1)
        
    print('Decode and re-encode a SessionSetup Reply #1')
    ss = SessionSetup()
    cmd = ss.decode(Direction.REPLY, session_setup_rep_buf_1[4 + 64:])
    buf = ss.encode(Direction.REPLY, cmd)

    if session_setup_rep_buf_1[4 + 64:] != buf:
        print('Re-encoded content mismatch')
        print('Original:')
        pr(session_setup_rep_buf_1[4 + 64:])
        print('Encoded:')
        pr(buf)
        exit(1)

    print('Decode and re-encode a SessionSetup Reply #2')
    ss = SessionSetup()
    cmd = ss.decode(Direction.REPLY, session_setup_rep_buf_2[4 + 64:])
    buf = ss.encode(Direction.REPLY, cmd)

    if session_setup_rep_buf_2[4 + 64:] != buf:
        print('Re-encoded content mismatch')
        print('Original:')
        pr(session_setup_rep_buf_2[4 + 64:])
        print('Encoded:')
        pr(buf)
        exit(1)


if __name__ == "__main__":
    main()
